/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.protonstandalonegui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author pcdebian
 */
public class FrmMain extends javax.swing.JFrame {

    private String nombrearchivo;
    private String rutaproton = "";
    private String rutawine = "";
    private String rutajuego;

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();

        File f = new File("protonpath.txt");
        if (f.exists() && f.isFile()) {

            try {
                BufferedReader br = new BufferedReader(new FileReader("protonpath.txt"));
                rutaproton = br.readLine();
                tprotonpath.setText(rutaproton);
                br.close();
            } catch (IOException ex) {

            }
        }

        f = new File("winepath.txt");
        if (f.exists() && f.isFile()) {

            try {
                BufferedReader br = new BufferedReader(new FileReader("winepath.txt"));
                rutawine = br.readLine();
                twinepath.setText(rutawine);
                br.close();
            } catch (IOException ex) {
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        truta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bcancelar = new javax.swing.JButton();
        baceptar = new javax.swing.JButton();
        barchivo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tprotonpath = new javax.swing.JTextField();
        twinepath = new javax.swing.JTextField();
        bprotonpath = new javax.swing.JButton();
        bwinepath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Game exe");

        bcancelar.setText("Exit");
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        baceptar.setText("Create sh");
        baceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baceptarActionPerformed(evt);
            }
        });

        barchivo.setText("...");
        barchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barchivoActionPerformed(evt);
            }
        });

        jLabel2.setText("Proton path");

        jLabel3.setText("Wine path");

        bprotonpath.setText("...");
        bprotonpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bprotonpathActionPerformed(evt);
            }
        });

        bwinepath.setText("...");
        bwinepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwinepathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(bcancelar)
                .addGap(48, 48, 48)
                .addComponent(baceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(truta, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tprotonpath)
                            .addComponent(twinepath))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(barchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(bprotonpath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bwinepath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tprotonpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bprotonpath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(bwinepath))
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(twinepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(truta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barchivo))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bcancelar)
                    .addComponent(baceptar))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void barchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barchivoActionPerformed
        // TODO add your handling code here:
        //Handle open button action.
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "EXE", "exe", "EXE");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            truta.setText(chooser.getSelectedFile().getAbsolutePath());
            nombrearchivo = chooser.getSelectedFile().getName();
            rutajuego = chooser.getSelectedFile().getParent();

        }

    }//GEN-LAST:event_barchivoActionPerformed

    private void baceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baceptarActionPerformed
        rutaproton = tprotonpath.getText();
        rutawine = twinepath.getText();
        if (!rutajuego.isEmpty() && !nombrearchivo.isEmpty() && !rutaproton.isEmpty() && !rutawine.isEmpty()) {
            try {
                // TODO add your handling code here:
                FileWriter myWriter = new FileWriter(rutaproton + "/" + Metodos.quitaextension(nombrearchivo) + ".sh");
                myWriter.write(" \n"
                        + "#!/bin/bash\n"
                        + "\n"
                        + "# Created by 7oxicshadow (23/09/19)\n"
                        + "# https://github.com/7oxicshadow/proton-standalone-script\n"
                        + "\n"
                        + "####################################################\n"
                        + "####               Important                    ####\n"
                        + "####################################################\n"
                        + "\n"
                        + "# This script has been tested with Proton GE but should in theory work with any proton version.\n"
                        + "# https://github.com/GloriousEggroll/proton-ge-custom/releases\n"
                        + "\n"
                        + "# Before you can use this script you have to make 2 minor changes to the proton python file!\n"
                        + "# Always make a backup before making changes :)\n"
                        + "\n"
                        + "# Note: Make sure you DO NOT make the changes below directly to your steam version of proton! Create a copy\n"
                        + "#       of the proton folder or use a downloaded version of proton as the changes would stop steam games from loading.\n"
                        + "\n"
                        + "# 1: Open the proton python file in a text editor\n"
                        + "# 2: Find the following line in the [def run(self)] section: \n"
                        + "#    self.run_proc([g_proton.wine_bin, \"steam\"] + sys.argv[2:])\n"
                        + "# 3: Change it to:\n"
                        + "#    self.run_proc([g_proton.wine_bin] + sys.argv[2:])\n"
                        + "# 4: Find the following line in the [class CompatData] section:\n"
                        + "#    self.prefix_dir = self.path(\"pfx/\")\n"
                        + "# 5: Change it to\n"
                        + "#    self.prefix_dir = self.path(\"\")\n"
                        + "# 6: Save the changes.\n"
                        + "\n"
                        + "# Put this script in the same folder as the proton python script.\n"
                        + "\n"
                        + "####################################################\n"
                        + "####      Script starts here!                   ####\n"
                        + "####################################################\n"
                        + "\n"
                        + "# Path to the proton file. This MUST be absolute as the proton script determines the working\n"
                        + "# directory from this path. The $PWD assumes that this .sh file is being run from the same directory as\n"
                        + "# the proton file. If you want to run the this script from anywhere, you need to change this to a Full\n"
                        + "# path i.e PROTON=/path/to/files/proton\n"
                        + "\n"
                        + "PROTON=$PWD/proton\n"
                        + "\n"
                        + "# Uncomment these options as required. Note: DXVK / D9VK is enabled by default and does not need any of the\n"
                        + "# options below\n"
                        + "\n"
                        + "#export DXVK_LOG_LEVEL=\"info\"\n"
                        + "#export PROTON_USE_WINED3D=\"1\"\n"
                        + "#export PROTON_USE_WINED3D11=\"1\"\n"
                        + "#export PROTON_NO_D3D11=\"1\"\n"
                        + "#export PROTON_NO_D3D10=\"1\"\n"
                        + "#export PROTON_NO_D9VK=\"1\"\n"
                        + "#export PROTON_NO_ESYNC=\"1\"\n"
                        + "#export PROTON_USE_VKD3D=\"1\"       #<-----DX12 support (only for versions of proton built with DX12 support)\n"
                        + "#export PROTON_NO_FSYNC=\"1\"\n"
                        + "#export PROTON_FORCE_LARGE_ADDRESS_AWARE=\"1\"\n"
                        + "#export PROTON_OLD_GL_STRING=\"1\"\n"
                        + "\n"
                        + "if grep -q ubuntu /etc/*-release; then\n"
                        + "    STEAM_HOME_DIR=\".steam\"\n"
                        + "    echo \"Using Ubuntu Steam Directory\"\n"
                        + "else\n"
                        + "    STEAM_HOME_DIR=\".local/share/Steam\"\n"
                        + "    echo \"Using Redhat Steam Directory\"\n"
                        + "fi\n"
                        + "\n"
                        + "#These 4 exports are NOT required for Joypad support but they are set by Steam so there is no harm in having them set here\n"
                        + "export SDL_GAMECONTROLLERCONFIG=\"03000000de280000ff11000001000000,Steam Virtual Gamepad,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,03000000de280000fc11000001000000,Steam Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,030000005e040000a102000007010000,X360 Wireless Controller,a:b0,b:b1,back:b6,dpdown:b14,dpleft:b11,dpright:b12,dpup:b13,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,0000000058626f782047616d65706100,XInput Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,030000005e0400008e02000010010000,X360 Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,\"\n"
                        + "export SDL_GAMECONTROLLER_ALLOW_STEAM_VIRTUAL_GAMEPAD=\"1\"\n"
                        + "export SDL_GAMECONTROLLER_USE_BUTTON_LABELS=\"1\"\n"
                        + "export SDL_VIDEO_X11_DGAMOUSE=\"0\"\n"
                        + "\n"
                        + "#This export is VERY IMPORTANT. Controller support will not work without pointing to steam libs!!!!!!!!!\n"
                        + "#This means that the native linux version of steam must be installed even though the script wont actually ever user it!!!!\n"
                        + "export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/pinned_libs_32:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/pinned_libs_64:/usr/lib64/qt-3.3/lib:/usr/lib64/tcl8.6:/usr/lib/wine:/usr/lib64/wine:/lib:/lib64:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib/i386-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib/i386-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib/x86_64-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib/x86_64-linux-gnu:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/lib:/home/$USER/$STEAM_HOME_DIR/ubuntu12_32/steam-runtime/usr/lib:\"\n"
                        + "\n"
                        + "# We need to manually set the environment variable for the game prefix so proton knows where the windows installation is.\n"
                        + "# This needs to point the root prefix folder. (it will contain 2 folders [dosdevices and drive_c] aswell as the\n"
                        + "# .reg files.\n"
                        + "export STEAM_COMPAT_DATA_PATH=\"" + rutawine + "\"\n"
                        + "\n"
                        + "# This command changes to the root directory containing the windows .exe file you want to run. This is important\n"
                        + "# as all calls the .exe makes are relative to this path! (note the linux path format)\n"
                        + "cd \"" + rutajuego + "\"\n"
                        + "\n"
                        + "# The final line actually executes the target exe. Steam typically uses the waitforexitandrun option when calling \n"
                        + "# the script but 'run' should work fine aswell. Note: The example below shows that you can call with command line\n"
                        + "# options just like a normal windows call.\n"
                        + "\n"
                        + "#python3 $PROTON run \"InfiltratorDemo.exe\" \"-d3d12 -ResX=1440 -ResY=900 -FullscreenMode=1 -Fullscreen\"\n"
                        + "python3 $PROTON waitforexitandrun \"" + nombrearchivo + "\" \"-d3d12 -FullscreenMode=1 -Fullscreen\"");
                myWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "You need to fill all fields.");
        }


    }//GEN-LAST:event_baceptarActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bprotonpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprotonpathActionPerformed
        // TODO add your handling code here:
        JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        f.showSaveDialog(null);
        tprotonpath.setText(f.getSelectedFile().getAbsolutePath());
        try {
            FileWriter myWriter = new FileWriter("protonpath.txt");
            myWriter.write(tprotonpath.getText());
            myWriter.close();
        } catch (IOException e) {

        }
    }//GEN-LAST:event_bprotonpathActionPerformed

    private void bwinepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwinepathActionPerformed
        // TODO add your handling code here:
        JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        f.showSaveDialog(null);
        twinepath.setText(f.getSelectedFile().getAbsolutePath());
        try {
            FileWriter myWriter = new FileWriter("winepath.txt");
            myWriter.write(twinepath.getText());
            myWriter.close();
        } catch (IOException e) {

        }
    }//GEN-LAST:event_bwinepathActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baceptar;
    private javax.swing.JButton barchivo;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton bprotonpath;
    private javax.swing.JButton bwinepath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tprotonpath;
    private javax.swing.JTextField truta;
    private javax.swing.JTextField twinepath;
    // End of variables declaration//GEN-END:variables
}
